#!/bin/bash

# ...

curl -X POST -H "Content-Type: application/json" -d '["file uploaded successfully"]' http://optimus17410.pythonanywhere.com/upload


# Check if the AWS CLI is installed
if ! command -v aws &> /dev/null; then
    echo "AWS CLI is not installed. Please install it and configure your credentials."
    exit 1
fi

# Specify your S3 bucket name
bucket_name="csdmalbucket"

# Retrieve the most recently uploaded file from the S3 bucket
latest_file=$(aws s3 ls s3://$bucket_name --recursive | sort | tail -n 1 | awk '{print $4}')

# Check if a file is found
if [ -z "$latest_file" ]; then
    echo "No file found in the S3 bucket."
    exit 1
fi

# Download the latest file from S3
aws s3 cp s3://$bucket_name/$latest_file latest_file.vmem



# Check if the file was successfully downloaded
if [ $? -ne 0 ]; then
    echo "Failed to download the latest file from S3."
    exit 1
fi

#running volatility plugins

echo "Running windows.pslist..."
python3 vol.py -f latest_file.vmem windows.pslist > pslist.txt
if [ $? -eq 0 ]; then
    echo "windows.pslist executed successfully."
    # Upload success message to Flask application
    curl -X POST -H "Content-Type: application/json" -d '["windows.pslist executed successfully."]' http://optimus17410.pythonanywhere.com/upload
else
    echo "Failed to execute windows.pslist."
fi

# Modify ownership and permissions of pslist.txt
sudo chown $(whoami) pslist.txt
sudo chmod 777 pslist.txt

echo "Running windows.dlllist..."
python3 vol.py -f latest_file.vmem windows.dlllist > dlllist.txt
if [ $? -eq 0 ]; then
    echo "windows.dlllist executed successfully."
    # Upload success message to Flask application
    curl -X POST -H "Content-Type: application/json" -d '["windows.dlllist executed successfully."]' http://optimus17410.pythonanywhere.com/upload
else
    echo "Failed to execute windows.dlllist."
fi

# Modify ownership and permissions of dlllist.txt
sudo chown $(whoami) dlllist.txt
sudo chmod 777 dlllist.txt

echo "Running windows.handles..."
python3 vol.py -f latest_file.vmem windows.handles > handles.txt
if [ $? -eq 0 ]; then
    echo "windows.handles executed successfully."
    # Upload success message to Flask application
    curl -X POST -H "Content-Type: application/json" -d '["windows.handles executed successfully."]' http://optimus17410.pythonanywhere.com/upload
else
    echo "Failed to execute windows.handles."
fi

# Modify ownership and permissions of handles.txt
sudo chown $(whoami) handles.txt
sudo chmod 777 handles.txt

echo "Running windows.ldrmodules..."
python3 vol.py -f latest_file.vmem windows.ldrmodules > ldrmodules.txt
if [ $? -eq 0 ]; then
    echo "windows.ldrmodules executed successfully."
    # Upload success message to Flask application
    curl -X POST -H "Content-Type: application/json" -d '["windows.ldrmodules executed successfully."]' http://optimus17410.pythonanywhere.com/upload
else
    echo "Failed to execute windows.ldrmodules."
fi

# Modify ownership and permissions of ldrmodules.txt
sudo chown $(whoami) ldrmodules.txt
sudo chmod 777 ldrmodules.txt

echo "Running windows.modules..."
python3 vol.py -f latest_file.vmem windows.modules > modules.txt
if [ $? -eq 0 ]; then
    echo "windows.modules executed successfully."
    # Upload success message to Flask application
    curl -X POST -H "Content-Type: application/json" -d '["windows.modules executed successfully."]' http://optimus17410.pythonanywhere.com/upload
else
    echo "Failed to execute windows.modules."
fi

# Modify ownership and permissions of modules.txt
sudo chown $(whoami) modules.txt
sudo chmod 777 modules.txt

echo "Running windows.callbacks..."
python3 vol.py -f latest_file.vmem windows.callbacks > callback.txt
if [ $? -eq 0 ]; then
    echo "windows.callbacks executed successfully."
    # Upload success message to Flask application
    curl -X POST -H "Content-Type: application/json" -d '["windows.callbacks executed successfully"]' http://optimus17410.pythonanywhere.com/upload
else
    echo "Failed to execute windows.callbacks."
fi

# Modify ownership and permissions of callback.txt
sudo chown $(whoami) callback.txt
sudo chmod 777 callback.txt

# ...

# Repeat the same pattern for other plugins

# ...

echo "Running python1.py..."
python3 python1.py
if [ $? -eq 0 ]; then
    echo "python1.py executed successfully."
    # Upload success message to Flask application
else
    echo "Failed to execute python1.py."
fi

echo "Running testmodel.py..."
python3 testmodel.py
if [ $? -eq 0 ]; then
    echo "testmodel.py executed successfully."
    # Upload success message to Flask application
else
    echo "Failed to execute testmodel.py."
fi

# ...

# Upload output.json
# ...
curl -X POST -H "Content-Type: application/json" -d @output.json http://optimus17410.pythonanywhere.com/upload
# ...

# Modify ownership and permissions of final.csv and output.json
sudo chown $(whoami) final.csv output.json
sudo chmod 777 final.csv output.json


#remove latest_file.vmem

echo "removed latest_file from ec2."
rm latest_file.vmem
